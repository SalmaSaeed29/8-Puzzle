import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class myFrame extends JFrame implements ActionListener {
    String in;
    JFrame frame = new JFrame();
    JPanel[][] panel = new JPanel[3][3];
    JPanel[][] panels = new JPanel[3][3];
    JLabel label = new JLabel();
    JComboBox combo;
    JTextField text = new JTextField();
    JButton button1 , button2 , button3;
    JLabel[][] numbers = new JLabel[3][3];
    JPanel panel1 = new JPanel();
    myFrame() {
        algorithms();
        input();
        combo.addActionListener(this);
        button1.addActionListener(this);
        frame.setSize(800, 820);
        frame.setTitle("8-puzzle");
        frame.getContentPane().setBackground(new Color(3,82,88));
        frame.setLayout(null);

        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
        labels();
        square();
        frame.setVisible(true);
    }
  void square(){
        int x=327 , y=15;
        for(int i =0; i<3; i++){
            for(int j =0; j<3; j++){
                panel[i][j]=new JPanel();
                panel[i][j].setBounds(x,y,140,140);
                panel[i][j].setBackground(Color.white);
                frame.add(panel[i][j]);
                x=x+145;
            }
            x=327;
            y=y+145;
        }

   }
   void labels(){
       label.setText("Choose the search algorithm: ");
       label.setFont(new Font("amaze", Font.BOLD, 28));
       label.setForeground(Color.darkGray);
       label.setVerticalAlignment(JLabel.TOP);
       panel1.setBounds(7,10,300,50);
       panel1.setBackground(new Color(3,82,88));
       frame.add(panel1);
       panel1.add(label);
       label.setOpaque(true);
   }
   void algorithms(){
        String[] algo = {"BFS" ,"DFS" , "A*"};
       combo = new JComboBox(algo);
       //combo.setSize(200,50);
       combo.setBounds(50,70,200,50);
       combo.setBackground(Color.white);

       combo.setFont(new Font("times new roman", Font.BOLD, 20));
       frame.add(combo);
   }
    void input(){
        text.setBounds(50,200, 200,50);
        button1 = new JButton("submit the initial state");
        button1.setBounds(50,250,200,50);
        frame.add(text);
        frame.add(button1);
        button2 = new JButton("Next step");
        button2.setBounds(50,350,200,50);
        frame.add(button2);
    }
    void states(String state){
        int k=0;
        int x=327 , y=15;
        for(int i=0; i<3; i++){
            for(int j=0; j<3; j++){
                numbers[i][j]=new JLabel();
                numbers[i][j].setText(String.valueOf(state.charAt(k)));
                System.out.println(String.valueOf(state.charAt(k)));
                numbers[i][j].setBounds(x,y,100,100);
                numbers[i][j].setForeground(Color.black);
                numbers[i][j].setFont(new Font("times new roman", Font.BOLD, 50));
                panels[i][j]=new JPanel();
                panels[i][j].setBounds(x,y,140,140);
                panels[i][j].setBackground(Color.white);
               // numbers[i][j].setOpaque(true);
                frame.add(panels[i][j]);
                frame.revalidate();
                frame.repaint();
               // frame.add(numbers[i][j]);
                panels[i][j].setLayout(new BoxLayout(panels[i][j], BoxLayout.X_AXIS ));
                panels[i][j].add(Box.createHorizontalGlue());
                panels[i][j].add(numbers[i][j]);
                panels[i][j].add(Box.createHorizontalGlue());

                k++;
                x=x+145;
            }
            x=327;
            y=y+145;
        }


    }
    void remove(){
        int x=315 , y=10;
        for(int i =0; i<3; i++){
            for(int j =0; j<3; j++){
                frame.remove(panel[i][j]);
                x=x+155;
            }
            x=315;
            y=y+155;
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==combo){
            System.out.println(combo.getSelectedItem());
        }
       if(e.getSource()==button1){
            System.out.println(text.getText());
            in = text.getText();
           remove();
           frame.revalidate();
           frame.repaint();
           states(in);

        }


    }
}
